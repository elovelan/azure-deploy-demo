{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app to create. Must be globally unique."
      }
    },
    "nameCheapApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API key to update DNS at NameCheap."
      }
    }
  },
  "variables": {
    "repoUrl": "https://github.com/AzureBytes/functionshttpecho.git",
    "branch": "master",
    "functionName": "Echo",
    "hostingPlanName": "[parameters('functionAppName')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
    "storageACcountid": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "LogicAppLocation": "[resourceGroup().location]",
    "storageAccountType": "Standard_LRS"
  },
  "resources": [
    {
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[variables('LogicAppLocation')]",
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('functionAppName'), 'web')]"
      ],
      "tags": {
        "displayName": "LogicApp"
      },
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Condition": {
              "actions": {},
              "else": {
                "actions": {
                  "HTTP_2": {
                    "inputs": {
                      "method": "GET",
                      "uri": "https://dynamicdns.park-your-domain.com/update?host=nh&domain=elvld.us&password=@{parameters('nameCheapApiKey')}&ip=@{body('HttpTriggerCSharp1')}"
                    },
                    "runAfter": {},
                    "type": "Http"
                  }
                }
              },
              "expression": "@endsWith(body('HTTP'), body('HttpTriggerCSharp1'))",
              "runAfter": {
                "HttpTriggerCSharp1": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "HTTP": {
              "inputs": {
                "method": "GET",
                "uri": "http://api.hackertarget.com/dnslookup/?q=nh.elvld.us"
              },
              "runAfter": {},
              "type": "Http"
            },
            "HttpTriggerCSharp1": {
              "inputs": {
                "function": {
                  "id": "/subscriptions/f515fdaa-ee81-4dc3-83b9-da772e121ba6/resourceGroups/AzureFunctions-EastUS2/providers/Microsoft.Web/sites/stuffandstuff/functions/HttpTriggerCSharp1"
                }
              },
              "runAfter": {
                "HTTP": [
                  "Succeeded"
                ]
              },
              "type": "Function"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {
            "nameCheapApiKey": {
              "type": "SecureString"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 30
              },
              "type": "Recurrence"
            }
          }
        },
        "parameters": {
          "nameCheapApiKey": {
            "value": "[parameters('nameCheapApiKey')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "6.5.0"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('functionAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('repoURL')]",
            "branch": "[variables('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    }
  ],
  "outputs": {}
}
